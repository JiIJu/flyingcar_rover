<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="model" default="$(find rover_gazebo)/xacro/main.xacro"/>
  <!-- <arg name="model" default="$(find fourth_robot_description)/robots/fourth_robot.urdf.xacro"/> -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>


<!-- suspension -->

  <rosparam command="load"
            file="$(find rover_control)/config/diffdrive.yaml"
            ns="suspension" />

  <rosparam command="load" file="$(find rover_control)/config/gazebo_ros_control_params.yaml"/>
  <rosparam command="load" file="$(find rover_control)/config/joints.yaml" ns="mobile_robot_joint_state_controller"/>

  <node name="robot_controller_spawner" pkg="controller_manager" type="spawner" args="mobile_robot_joint_state_controller suspension --shutdown-timeout 3"/>


  <!-- suspension  -->


  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- <arg name="world_name" value="$(find rover_gazebo)/worlds/test4.world"/> -->
    <!-- <arg name="world_name" value="$(find rover_gazebo)/worlds/line.world"/> -->
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- launch joynode -->
    <!--remap from='joy' to='joy'/>
    <node pkg="joy" type="joy_node" name="joy_node0">
      <param name="dev" value="$(arg joy_dev0)" />
      <param name="deadzone" value="0.3" />
      <param name="autorepeat_rate" value="20" />
    </node-->

  <!-- launch commander node -->
  <!-- <include file="$(find rover_control)/launch/commander.launch"/> -->

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(arg model)'" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
  		args="-urdf -model rover -param robot_description -z 0.5"/>

    <!-- <node pkg="tf" type="static_transform_publisher" name="map_to_base" args="0 0 0 0 0 0 /map /base_link 50" /> -->

  <!-- ros_control motoman launch file -->
  <include file="$(find rover_control)/launch/robot_control.launch"/>

  <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rover_gazebo)/launch/ranger_rv.rviz" required="true" /> -->
</launch>
